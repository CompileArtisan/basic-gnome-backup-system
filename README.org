#+title: Gnome Backup System

* Table of Contents :toc:
- [[#backup][Backup]]
  - [[#system-packages][System Packages]]
  - [[#snap-packages][Snap Packages]]
  - [[#flatpaks][Flatpaks]]
  - [[#gnome-settings-and-customizations][Gnome Settings and Customizations]]
  - [[#fonts][Fonts]]
  - [[#terminal][Terminal]]
- [[#restore][Restore]]
  - [[#flatpaks-1][Flatpaks]]
  - [[#snaps][Snaps]]
  - [[#gnome-settings-and-customizations-1][Gnome Settings and Customizations]]
  - [[#terminal-1][Terminal]]
  - [[#emacs][Emacs]]

* Backup
** System Packages
*** Ubuntu
#+begin_src bash :results output raw :wrap src :exports both
dpkg --get-selections | grep -v deinstall | cut -f1 > package-list.txt
#+end_src
** Snap Packages
#+begin_src bash :results output raw :wrap src :exports both
snap list > snap-packages.txt
#+end_src
** Flatpaks
#+begin_src bash :results output raw :wrap src :exports both
flatpak list --app > flatpak-packages.txt
#+end_src
** Gnome Settings and Customizations
#+begin_src bash :results output raw :wrap src :exports both
dconf dump / > gnome-settings.conf
cp -r ~/.icons .
cp -r ~/.themes .
cp -r ~/.local/share/gnome-shell/extensions .

#+end_src
** Fonts
#+begin_src bash :results output raw :wrap src :exports both
cp -r ~/.local/share/fonts .

#+end_src
** Terminal
#+begin_src bash :results output raw :wrap src :exports both
cp -r ~/.config/kitty/kitty.conf .
cp ~/.zshrc .
#+end_src

* Restore

** Flatpaks
*** Arch
#+begin_src bash :results output raw :wrap src :exports both
# Install flatpak first
sudo pacman -S flatpak

# Add flathub repo
flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo

#+end_src
** Snaps
*** Arch
#+begin_src bash :results output raw :wrap src :exports both
# Install snapd
yay -S snapd  # or use your AUR helper
sudo systemctl enable --now snapd.socket

# Then install from your list
#+end_src
** Gnome Settings and Customizations
#+begin_src bash :results output raw :wrap src :exports both
# Restore all your GNOME settings
dconf load / < gnome-settings.conf

# Install your GNOME extensions
cp -r extensions ~/.local/share/gnome-shell/
# Then restart GNOME Shell: Alt+F2, type 'r', press Enter

# Restore themes
cp -r .themes ~/

#+end_src
** Terminal
#+begin_src bash output
# Restore kitty config
mkdir -p ~/.config/kitty
cp kitty.conf ~/.config/kitty/
# If using zsh with oh-my-zsh
sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
# Restore zsh config
cp .zshrc ~/
#+end_src
** Emacs
*** Install emacs
#+begin_src bash :results output raw :wrap src :exports both
sudo apt install emacs
#+end_src
*** Install Dependencies
#+begin_src bash :results output raw :wrap src :exports both
sudo apt install ripgrep
sudo apt install fd-find
sudo apt install xelatex texlive-full  # For LaTeX support
sudo apt install zsh                   # If using zsh

#+end_src
*** LaTeX Setup
#+begin_src bash :results output raw :wrap src :exports both
# Install full TeX Live distribution
sudo apt install texlive-full texlive-xetex

# Or minimal install with required packages
sudo apt install texlive-latex-base texlive-latex-recommended texlive-latex-extra texlive-fonts-recommended texlive-xetex
#+end_src
*** Additional Tools
#+begin_src bash :results output raw :wrap src :exports both
# Install tree-sitter (if not included with Emacs)
sudo apt install tree-sitter-cli

# Install language servers for LSP
# Java
sudo apt install openjdk-17-jdk
# JavaScript/TypeScript
curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -
sudo apt install nodejs
npm install -g typescript-language-server

# Python
pip install python-lsp-server

# Web development
npm install -g vscode-langservers-extracted
#+end_src
*** Doom Emacs Installation
#+begin_src bash :results output raw :wrap src :exports both
git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.emacs.d
export PATH="$HOME/.emacs.d/bin:$PATH"
~/.emacs.d/bin/doom install
#+end_src
#+begin_src bash :results output raw :wrap src :exports both
# Make PATH permanent (add to ~/.bashrc or ~/.zshrc)
echo 'export PATH="$HOME/.emacs.d/bin:$PATH"' >> ~/.bashrc
source ~/.bashrc
#+end_src
*** Restore Custom Doom Emacs Configuration
#+begin_src bash :results output raw :wrap src :exports both
# Remove default config
rm -rf ~/.config/doom

# Restore your backed up config
git clone https://github.com/CompileArtisan/doom-emacs-configuration ~/.config/doom

# Sync your configuration
~/.emacs.d/bin/doom sync

# Optionally, rebuild everything
~/.emacs.d/bin/doom build
#+end_src
